--- contrib/libs/onnx_runtime/onnxruntime/core/flatbuffers/schema/ort.fbs.h	(index)
+++ contrib/libs/onnx_runtime/onnxruntime/core/flatbuffers/schema/ort.fbs.h	(working tree)
@@ -1342,7 +1342,7 @@ inline flatbuffers::Offset<Tensor> CreateTensor(
     flatbuffers::Offset<flatbuffers::Vector<uint8_t>> raw_data = 0,
     flatbuffers::Offset<flatbuffers::Vector<flatbuffers::Offset<flatbuffers::String>>> string_data = 0) {
   TensorBuilder builder_(_fbb);
-  builder_.add_string_data(TString{string_data});
+  builder_.add_string_data(string_data);
   builder_.add_raw_data(raw_data);
   builder_.add_data_type(data_type);
   builder_.add_dims(dims);
@@ -1614,7 +1614,7 @@ inline flatbuffers::Offset<Attribute> CreateAttribute(
   builder_.add_i(i);
   builder_.add_graphs(graphs);
   builder_.add_tensors(tensors);
-  builder_.add_strings(TString{strings});
+  builder_.add_strings(strings);
   builder_.add_ints(ints);
   builder_.add_floats(floats);
   builder_.add_g(g);
--- contrib/libs/onnx_runtime/onnxruntime/core/framework/tensorprotoutils.cc	(index)
+++ contrib/libs/onnx_runtime/onnxruntime/core/framework/tensorprotoutils.cc	(working tree)
@@ -795,7 +795,7 @@ ONNX_NAMESPACE::TensorProto TensorToTensorProto(const Tensor& tensor, const std:
       *mutable_string_data->Add() = *f;
     }
   } else {
-    tensor_proto.set_raw_data(TString{tensor.DataRaw(), tensor.SizeInBytes()});
+    tensor_proto.set_raw_data(tensor.DataRaw(), tensor.SizeInBytes());
   }
 
   return tensor_proto;
--- contrib/libs/onnx_runtime/onnxruntime/core/graph/graph_flatbuffers_utils.cc	(index)
+++ contrib/libs/onnx_runtime/onnxruntime/core/graph/graph_flatbuffers_utils.cc	(working tree)
@@ -197,2 +197,2 @@ Status LoadInitializerOrtFormat(const fbs::Tensor& fbs_tensor,
       // fbs_raw_data is uint8_t vector, so the size is byte size
-      initializer.set_raw_data(TString{fbs_raw_data->Data(), fbs_raw_data->size()});
+      initializer.set_raw_data(fbs_raw_data->Data(), fbs_raw_data->size());
