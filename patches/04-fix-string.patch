--- contrib/libs/onnx_runtime/onnxruntime/core/optimizer/gather_fusion.cc	(42b6c54ad4fc64d0e17a823aa26e89eb8b1c98c8)
+++ contrib/libs/onnx_runtime/onnxruntime/core/optimizer/gather_fusion.cc	(index)
@@ -173,7 +173,7 @@ Status GatherToSplitFusion::ApplyImpl(Graph& graph, bool& modified, int graph_le
         axes_initializer_proto.add_dims(static_cast<int64_t>(1));
         axes_initializer_proto.set_data_type(ONNX_NAMESPACE::TensorProto_DataType_INT64);
         InlinedVector<int64_t> axes_value{split_axis};
-        axes_initializer_proto.set_raw_data(TString{axes_value.data(), axes_value.size() * sizeof(int64_t)});
+        axes_initializer_proto.set_raw_data(axes_value.data(), axes_value.size() * sizeof(int64_t));
         NodeArg* axes_arg = &graph_utils::AddInitializer(graph, axes_initializer_proto);
 
         for (size_t i = 0; i < output_count; ++i) {
--- contrib/libs/onnx_runtime/onnxruntime/core/optimizer/qdq_transformer/avx2_weight_s8_to_u8.cc	(42b6c54ad4fc64d0e17a823aa26e89eb8b1c98c8)
+++ contrib/libs/onnx_runtime/onnxruntime/core/optimizer/qdq_transformer/avx2_weight_s8_to_u8.cc	(index)
@@ -130,7 +130,7 @@ static bool TryConvertDynamicQuantizeLSTM(Node& op_node, Graph& graph) {
   weights_proto_u8.set_data_type(ONNX_NAMESPACE::TensorProto_DataType_UINT8);
   weights_proto_u8.set_name(TString{weight_tensor_proto->name() + "_s8_2_u8"});
   weights_proto_u8.mutable_dims()->CopyFrom(weight_tensor_proto->dims());
-  weights_proto_u8.set_raw_data(TString{w_temp.data<int8_t>(), w_temp.size()});
+  weights_proto_u8.set_raw_data(w_temp.data<int8_t>(), w_temp.size());
   input_defs[w_idx] = &graph_utils::AddInitializer(graph, weights_proto_u8);
 
   ONNX_NAMESPACE::TensorProto weight_zp_proto_u8;
@@ -141,7 +141,7 @@ static bool TryConvertDynamicQuantizeLSTM(Node& op_node, Graph& graph) {
   r_proto_u8.set_data_type(ONNX_NAMESPACE::TensorProto_DataType_UINT8);
   r_proto_u8.set_name(TString{r_tensor_proto->name() + "_s8_2_u8"});
   r_proto_u8.mutable_dims()->CopyFrom(r_tensor_proto->dims());
-  r_proto_u8.set_raw_data(TString{r_temp.data<int8_t>(), r_temp.size()});
+  r_proto_u8.set_raw_data(r_temp.data<int8_t>(), r_temp.size());
   input_defs[r_idx] = &graph_utils::AddInitializer(graph, r_proto_u8);
 
   ONNX_NAMESPACE::TensorProto r_zp_proto_u8;
--- contrib/libs/onnx_runtime/onnxruntime/core/optimizer/qdq_transformer/s8_to_u8.h	(42b6c54ad4fc64d0e17a823aa26e89eb8b1c98c8)
+++ contrib/libs/onnx_runtime/onnxruntime/core/optimizer/qdq_transformer/s8_to_u8.h	(index)
@@ -27,7 +27,7 @@ inline bool Int8TensorProto2Uint8(
   if (nullptr == src) {
     uint8_t zero_val = 128;
     dst.set_name(TString{graph.GenerateNodeArgName("weight_zp_s8_2_u8")});
-    dst.set_raw_data(TString{&zero_val, sizeof(uint8_t)});
+    dst.set_raw_data(&zero_val, sizeof(uint8_t));
     return true;
   }
 
@@ -58,7 +58,7 @@ inline bool Int8TensorProto2Uint8(
     p++;
   }
   if (force || should_convert) {
-    dst.set_raw_data(TString{temp.data<int8_t>(), size_t(temp.size())});
+    dst.set_raw_data(temp.data<int8_t>(), size_t(temp.size()));
     return true;
   }
   return false;
